openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /basket/:
    get:
      operationId: basket_list
      tags:
      - basket
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Basket'
          description: ''
    post:
      operationId: basket_create
      tags:
      - basket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Basket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Basket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Basket'
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
          description: ''
  /basket/{id}/:
    get:
      operationId: basket_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this orderitem.
        required: true
      tags:
      - basket
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
          description: ''
    patch:
      operationId: basket_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this orderitem.
        required: true
      tags:
      - basket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBasket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBasket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBasket'
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'
          description: ''
    delete:
      operationId: basket_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this orderitem.
        required: true
      tags:
      - basket
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /cat/:
    get:
      operationId: cat_list
      tags:
      - cat
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: cat_create
      tags:
      - cat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /cat/{id}/:
    get:
      operationId: cat_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - cat
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: cat_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - cat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: cat_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - cat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: cat_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - cat
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /confirm_order/:
    post:
      operationId: confirm_order_create
      tags:
      - confirm_order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /get_token/:
    post:
      operationId: get_token_create
      tags:
      - get_token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /myaccount/:
    get:
      operationId: myaccount_retrieve
      tags:
      - myaccount
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /orders/:
    get:
      operationId: orders_list
      tags:
      - orders
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
  /orders/{id}/:
    get:
      operationId: orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /products/:
    get:
      operationId: products_list
      tags:
      - products
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInfo'
          description: ''
  /products/{id}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this productinfo.
        required: true
      tags:
      - products
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfo'
          description: ''
  /register/:
    post:
      operationId: register_create
      tags:
      - register
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /shop/:
    get:
      operationId: shop_list
      tags:
      - shop
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shopserializer'
          description: ''
    post:
      operationId: shop_create
      tags:
      - shop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shopserializer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shopserializer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shopserializer'
        required: true
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopserializer'
          description: ''
  /shop/{id}/:
    get:
      operationId: shop_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - shop
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopserializer'
          description: ''
    put:
      operationId: shop_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - shop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shopserializer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shopserializer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shopserializer'
        required: true
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopserializer'
          description: ''
    patch:
      operationId: shop_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - shop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShopserializer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShopserializer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShopserializer'
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shopserializer'
          description: ''
    delete:
      operationId: shop_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shop.
        required: true
      tags:
      - shop
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /yamlupload/:
    post:
      operationId: yamlupload_create
      tags:
      - yamlupload
      security:
      - tokenAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Available:
      type: object
      properties:
        shop:
          $ref: '#/components/schemas/Shopserializer'
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Цена
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Количество
      required:
      - price
      - quantity
      - shop
    Basket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductInfo'
          readOnly: true
        shop:
          allOf:
          - $ref: '#/components/schemas/Shopserializer'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - id
      - product
      - shop
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shops:
          type: array
          items:
            $ref: '#/components/schemas/Shopserializer'
          readOnly: true
        name:
          type: string
          title: Категория
          maxLength: 50
      required:
      - id
      - name
      - shops
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        order:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        shop:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - id
      - order
      - product
      - shop
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dt:
          type: string
          format: date-time
          readOnly: true
          title: Создан
        status:
          type: string
          title: Статус заказа
          maxLength: 15
        items:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - dt
      - id
      - items
      - status
    Parameter:
      type: object
      properties:
        name:
          type: string
          title: Название
          maxLength: 100
      required:
      - name
    PatchedBasket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductInfo'
          readOnly: true
        shop:
          allOf:
          - $ref: '#/components/schemas/Shopserializer'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        shops:
          type: array
          items:
            $ref: '#/components/schemas/Shopserializer'
          readOnly: true
        name:
          type: string
          title: Категория
          maxLength: 50
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dt:
          type: string
          format: date-time
          readOnly: true
          title: Создан
        status:
          type: string
          title: Статус заказа
          maxLength: 15
        items:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
    PatchedShopserializer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          title: Название магазина
          maxLength: 50
        url:
          type: string
          format: uri
          title: Ссылка на сайт магазина
          maxLength: 40
        filename:
          type: string
          title: Файл
          maxLength: 20
        state:
          type: boolean
    ProductInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 50
        availability:
          type: array
          items:
            $ref: '#/components/schemas/Available'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ProductParameter'
        price_rrc:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: РРЦ
      required:
      - availability
      - id
      - name
      - parameters
      - price_rrc
    ProductParameter:
      type: object
      properties:
        parameter:
          $ref: '#/components/schemas/Parameter'
        value:
          type: string
      required:
      - parameter
      - value
    Shopserializer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          title: Название магазина
          maxLength: 50
        url:
          type: string
          format: uri
          title: Ссылка на сайт магазина
          maxLength: 40
        filename:
          type: string
          title: Файл
          maxLength: 20
        state:
          type: boolean
      required:
      - filename
      - name
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
